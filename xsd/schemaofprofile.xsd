<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://www.loc.gov/METS/" xmlns="http://www.loc.gov/METS/" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:Q1="http://www.loc.gov/mods/v3">
		<xsd:import schemaLocation="mods-3-3.xsd" namespace="http://www.loc.gov/mods/v3"/>
		<xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>


	<xsd:element name="mets">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">METS: Metadata Encoding and Transmission Standard.
				METS is intended to provide a standardized XML format for transmission of complex digital library objects between systems.  As such, it can be seen as filling a role similar to that defined for the Submission Information Package (SIP), Archival Information Package (AIP) and Dissemination Information Package (DIP) in the Reference Model for an Open Archival Information System. The root element &lt;mets&gt; establishes the container for the information being stored and/or transmitted by the standard.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="metsType"/>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="metsType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">metsType: Complex Type for METS Sections
			A METS document consists of seven possible subsidiary sections: metsHdr (METS document header), dmdSec (descriptive metadata section), amdSec (administrative metadata section), fileGrp (file inventory group), structLink (structural map linking), structMap (structural map) and behaviorSec (behaviors section).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="metsHdr" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
					The mets header element &lt;metsHdr&gt; captures metadata about the METS document itself, not the digital object the METS document encodes. Although it records a more limited set of metadata, it is very similar in function and purpose to the headers employed in other schema such as the Text Encoding Initiative (TEI) or in the Encoded Archival Description (EAD).
			</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="agent" minOccurs="0" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">agent:
								The agent element &lt;agent&gt; provides for various parties and their roles with respect to the METS record to be documented.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="name" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation xml:lang="en">
											The element &lt;name&gt; can be used to record the full name of the document agent.
											</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="ROLE" use="required">
									<xsd:annotation>
										<xsd:documentation xml:lang="en">ROLE (string/R): Specifies the function of the agent with respect to the METS record. The allowed values are:
CREATOR: The person(s) or institution(s) responsible for the METS document.
EDITOR: The person(s) or institution(s) that prepares the metadata for encoding.
ARCHIVIST: The person(s) or institution(s) responsible for the document/collection.
PRESERVATION: The person(s) or institution(s) responsible for preservation functions.
DISSEMINATOR: The person(s) or institution(s) responsible for dissemination functions.
CUSTODIAN: The person(s) or institution(s) charged with the oversight of a document/collection.
IPOWNER: Intellectual Property Owner: The person(s) or institution holding copyright, trade or service marks or other intellectual property rights for the object.
OTHER: Use OTHER if none of the preceding values pertains and clarify the type and location specifier being used in the OTHERROLE attribute (see below).
										</xsd:documentation>
									</xsd:annotation>
									<xsd:simpleType>
										<xsd:restriction base="xsd:string">
											<xsd:enumeration value="CREATOR"/>
											<xsd:enumeration value="EDITOR"/>
											<xsd:enumeration value="ARCHIVIST"/>
											<xsd:enumeration value="PRESERVATION"/>
											<xsd:enumeration value="DISSEMINATOR"/>
											<xsd:enumeration value="CUSTODIAN"/>
											<xsd:enumeration value="IPOWNER"/>
											<xsd:enumeration value="OTHER"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
								<xsd:attribute name="TYPE" use="optional">
									<xsd:annotation>
										<xsd:documentation xml:lang="en">TYPE (string/O): is used to specify the type of AGENT. It must be one of the following values:
INDIVIDUAL: Use if an individual has served as the agent.
ORGANIZATION: Use if an institution, corporate body, association, non-profit enterprise, government, religious body, etc. has served as the agent.
OTHER: Use OTHER if none of the preceding values pertain and clarify the type of agent specifier being used in the OTHERTYPE attribute
										</xsd:documentation>
									</xsd:annotation>
									<xsd:simpleType>
										<xsd:restriction base="xsd:string">
											<xsd:enumeration value="INDIVIDUAL"/>
											<xsd:enumeration value="ORGANIZATION"/>
											<xsd:enumeration value="OTHER"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
								<xsd:attribute name="OTHERTYPE" type="xsd:string" use="optional">
									<xsd:annotation>
										<xsd:documentation xml:lang="en">OTHERTYPE (string/O): Specifies the type of agent when the value OTHER is indicated in the TYPE attribute.
										</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ADMID" type="xsd:IDREFS" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">ADMID (IDREFS/O): Contains the ID attribute values of the &lt;techMD&gt;, &lt;sourceMD&gt;, &lt;rightsMD&gt; and/or &lt;digiprovMD&gt; elements within the &lt;amdSec&gt; of the METS document that contain administrative metadata pertaining to the METS document itself.  For more information on using METS IDREFS and IDREF type attributes for internal linking, see Chapter 4 of the METS Primer.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CREATEDATE" type="xsd:dateTime" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">CREATEDATE (dateTime/O): Records the date/time the METS document was created.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="LASTMODDATE" type="xsd:dateTime" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">LASTMODDATE (dateTime/O): Is used to indicate the date/time the METS document was last modified.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="RECORDSTATUS" type="xsd:string" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">RECORDSTATUS (string/O): Specifies the status of the METS document. It is used for internal processing purposes.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="dmdSec" type="mdSecType" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						A descriptive metadata section &lt;dmdSec&gt; records descriptive metadata pertaining to the METS object as a whole or one of its components. The &lt;dmdSec&gt; element conforms to same generic datatype as the &lt;techMD&gt;, &lt;rightsMD&gt;, &lt;sourceMD&gt; and &lt;digiprovMD&gt; elements, and supports the same sub-elements and attributes. A descriptive metadata element can either wrap the metadata  (mdWrap) or reference it in an external location (mdRef) or both.  METS allows multiple &lt;dmdSec&gt; elements; and descriptive metadata can be associated with any METS element that supports a DMDID attribute.  Descriptive metadata can be expressed according to many current description standards (i.e., MARC, MODS, Dublin Core, TEI Header, EAD, VRA, FGDC, DDI) or a locally produced XML schema.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="fileSec" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The overall purpose of the content file section element &lt;fileSec&gt; is to provide an inventory of and the location for the content files that comprise the digital object being described in the METS document.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="fileGrp" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">
									A sequence of file group elements &lt;fileGrp&gt; can be used group the digital files comprising the content of a METS object either into a flat arrangement or, because each file group element can itself contain one or more  file group elements,  into a nested (hierarchical) arrangement. In the case where the content files are images of different formats and resolutions, for example, one could group the image content files by format and create a separate &lt;fileGrp&gt; for each image format/resolution such as:
-- one &lt;fileGrp&gt; for the thumbnails of the images
-- one &lt;fileGrp&gt; for the higher resolution JPEGs of the image
-- one &lt;fileGrp&gt; for the master archival TIFFs of the images
For a text resource with a variety of content file types one might group the content files at the highest level by type,  and then use the &lt;fileGrp&gt; element’s nesting capabilities to subdivide a &lt;fileGrp&gt; by format within the type, such as:
-- one &lt;fileGrp&gt; for all of the page images with nested &lt;fileGrp&gt; elements for each image format/resolution (tiff, jpeg, gif)
-- one &lt;fileGrp&gt; for a PDF version of all the pages of the document
-- one &lt;fileGrp&gt; for  a TEI encoded XML version of the entire document or each of its pages.
A &lt;fileGrp&gt; may contain zero or more &lt;fileGrp&gt; elements and or &lt;file&gt; elements.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="fileGrpType"/>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="structMap" type="structMapType" maxOccurs="2" minOccurs="2">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The structural map section &lt;structMap&gt; is the heart of a METS document. It provides a means for organizing the digital content represented by the &lt;file&gt; elements in the &lt;fileSec&gt; of the METS document into a coherent hierarchical structure. Such a hierarchical structure can be presented to users to facilitate their comprehension and navigation of the digital content. It can further be applied to any purpose requiring an understanding of the structural relationship of the content files or parts of the content files. The organization may be specified to any level of granularity (intellectual and or physical) that is desired. Since the &lt;structMap&gt; element is repeatable, more than one organization can be applied to the digital content represented by the METS document.  The hierarchical structure specified by a &lt;structMap&gt; is encoded as a tree of nested &lt;div&gt; elements. A &lt;div&gt; element may directly point to content via child file pointer &lt;fptr&gt; elements (if the content is represented in the &lt;fileSec&lt;) or child METS pointer &lt;mptr&gt; elements (if the content is represented by an external METS document). The &lt;fptr&gt; element may point to a single whole &lt;file&gt; element that manifests its parent &lt;div&lt;, or to part of a &lt;file&gt; that manifests its &lt;div&lt;. It can also point to multiple files or parts of files that must be played/displayed either in sequence or in parallel to reveal its structural division. In addition to providing a means for organizing content, the &lt;structMap&gt; provides a mechanism for linking content at any hierarchical level with relevant descriptive and administrative metadata.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="structLink" minOccurs="1" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The structural link section element &lt;structLink&gt; allows for the specification of hyperlinks between the different components of a METS structure that are delineated in a structural map. This element is a container for a single, repeatable element, &lt;smLink&gt; which indicates a hyperlink between two nodes in the structural map. The &lt;structLink&gt; section in the METS document is identified using its XML ID attributes.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="structLinkType"/>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="OBJID" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">OBJID (string/O): Is the primary identifier assigned to the METS object as a whole. Although this attribute is not required, it is strongly recommended. This identifier is used to tag the entire METS object to external systems, in contrast with the ID identifier.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="LABEL" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">LABEL (string/O): Is a simple title string used to identify the object/entity being described in the METS document for the user.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">TYPE (string/O): Specifies the class or type of the object, e.g.: book, journal, stereograph, dataset, video, etc.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="PROFILE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">PROFILE (string/O): Indicates to which of the registered profile(s) the METS document conforms. For additional information about PROFILES see Chapter 5 of the METS Primer.
			</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="fileGrpType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">fileGrpType: Complex Type for File Groups
				The file group is used to cluster all of the digital files composing a digital library object in a hierarchical arrangement (fileGrp is recursively defined to enable the creation of the hierarchy).  Any file group may contain zero or more file elements.  File elements in turn can contain one or more FLocat elements (a pointer to a file containing content for this object) and/or a FContent element (the contents of the file, in either XML or  Base64 encoding).
				</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="file" minOccurs="1" maxOccurs="unbounded" type="fileType" >
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The file element &lt;file&gt; provides access to the content files for the digital object being described by the METS document. A &lt;file&gt; element may contain one or more &lt;FLocat&gt; elements which provide pointers to a content file and/or a &lt;FContent&gt; element which wraps an encoded version of the file. Embedding files using &lt;FContent&gt; can be a valuable feature for exchanging digital objects between repositories or for archiving versions of digital objects for off-site storage. All &lt;FLocat&gt; and &lt;FContent&gt; elements should identify and/or contain identical copies of a single file. The &lt;file&gt; element is recursive, thus allowing sub-files or component files of a larger file to be listed in the inventory. Alternatively, by using the &lt;stream&gt; element, a smaller component of a file or of a related file can be placed within a &lt;file&gt; element. Finally, by using the &lt;transformFile&gt; element, it is possible to include within a &lt;file&gt; element a different version of a file that has undergone a transformation for some reason, such as format migration.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="USE" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">
					USE (string/O): A tagging attribute to indicate the
					intended use of files within this file group (e.g.,
					master, reference, thumbnails for image files). A
					USE attribute can be expressed at the&lt;fileGrp&gt;
					level, the &lt;file&gt; level, the &lt;FLocat&gt;
					level and/or the &lt;FContent&gt; level. A USE
					attribute value at the &lt;fileGrp&gt; level should
					pertain to all of the files in the &lt;fileGrp&gt;.
					A USE attribute at the &lt;file&gt; level should
					pertain to all copies of the file as represented by
					subsidiary &lt;FLocat&gt; and/or &lt;FContent&gt;
					elements. A USE attribute at the &lt;FLocat&gt; or
					&lt;FContent&gt; level pertains to the particular
					copy of the file that is either referenced
					(&lt;FLocat&gt;) or wrapped (&lt;FContent&gt;).
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="MASTER"></xsd:enumeration>
					<xsd:enumeration value="PRESENTATION"></xsd:enumeration>
					<xsd:enumeration value="ALTO"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="structMapType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">structMapType: Complex Type for Structural Maps
			The structural map (structMap) outlines a hierarchical structure for the original object being encoded, using a series of nested div elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="div" type="divType">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The structural divisions of the hierarchical organization provided by a &lt;structMap&gt; are represented by division &lt;div&gt; elements, which can be nested to any depth. Each &lt;div&gt; element can represent either an intellectual (logical) division or a physical division. Every &lt;div&gt; node in the structural map hierarchy may be connected (via subsidiary &lt;mptr&gt; or &lt;fptr&gt; elements) to content files which represent that div's portion of the whole document.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="TYPE" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">
					TYPE (string/O): Identifies the type of structure
					represented by the &lt;structMap&gt;. For example, a
					&lt;structMap&gt; that represented a purely logical
					or intellectual structure could be assigned a TYPE
					value of “logical” whereas a &lt;structMap&gt; that
					represented a purely physical structure could be
					assigned a TYPE value of “physical”. However, the
					METS schema neither defines nor requires a common
					vocabulary for this attribute. A METS profile,
					however, may well constrain the values for the
					&lt;structMap&gt; TYPE.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="physical"></xsd:enumeration>
					<xsd:enumeration value="logical"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>

	</xsd:complexType>
	<xsd:complexType name="divType">
		<xsd:sequence>
			<xsd:element name="fptr" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="area" type="areaType" minOccurs="0"/>
					</xsd:choice>
					<xsd:attribute name="FILEID" type="xsd:IDREF" use="optional"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="div" type="divType2" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
		<xsd:attribute name="ORDER" type="xsd:integer" use="optional"/>
		<xsd:attribute name="DMDID" type="xsd:IDREFS" use="optional"/>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="divType2">
		<xsd:sequence>
			<xsd:element name="fptr" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="area" type="areaType" minOccurs="0"/>
					</xsd:choice>
					<xsd:attribute name="FILEID" type="xsd:IDREF" use="optional"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="div" type="divType" minOccurs="0"
				maxOccurs="unbounded" />
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="optional"/>
		<xsd:attribute name="ORDER" type="xsd:integer" use="optional"/>
		<xsd:attribute name="DMDID" type="xsd:IDREFS" use="optional"/>
		<xsd:attribute name="TYPE" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="seqType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">seqType: Complex Type for Sequences of Files
					The seq element should be used to link a div to a set of content files when those files should be played/displayed sequentially to deliver content to a user.  Individual &lt;area&gt; subelements within the seq element provide the links to the files or portions thereof.
				</xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="area" type="areaType" minOccurs="0"/>
			<xsd:element name="par" type="xsd:string" minOccurs="0"/>
		</xsd:choice>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="areaType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">areaType: Complex Type for Area Linking
				The area element provides for more sophisticated linking between a div element and content files representing that div, be they text, image, audio, or video files.  An area element can link a div to a point within a file, to a one-dimension segment of a file (e.g., text segment, image line, audio/video clip), or a two-dimensional section of a file 	(e.g, subsection of an image, or a subsection of the  video display of a video file.  The area element has no content; all information is recorded within its various attributes.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="FILEID" type="xsd:IDREF" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">FILEID (IDREF/R): An attribute which provides the XML ID value that identifies the &lt;file&gt; element in the &lt;fileSec&gt; that then points to and/or contains the digital content represented by the &lt;area&gt; element. It must contain an ID value represented in an ID attribute associated with a &lt;file&gt; element in the &lt;fileSec&gt; element in the same METS document.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SHAPE" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">SHAPE (string/O): An attribute that can be used as in HTML to define the shape of the relevant area within the content file pointed to by the &lt;area&gt; element. Typically this would be used with image content (still image or video frame) when only a portion of an integal image map pertains. If SHAPE is specified then COORDS must also be present. SHAPE should be used in conjunction with COORDS in the manner defined for the shape and coords attributes on an HTML4 &lt;area&gt; element. SHAPE must contain one of the following values:
RECT
CIRCLE
POLY
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="RECT"/>
					<xsd:enumeration value="POLY"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="COORDS" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">COORDS (string/O): Specifies the coordinates in an image map for the shape of the pertinent area as specified in the SHAPE attribute. While technically optional, SHAPE and COORDS must both appear together to define the relevant area of image content. COORDS should be used in conjunction with SHAPE in the manner defined for the COORDs and SHAPE attributes on an HTML4 &lt;area&gt; element. COORDS must be a comma delimited string of integer value pairs representing coordinates (plus radius in the case of CIRCLE) within an image map. Number of coordinates pairs depends on shape: RECT: x1, y1, x2, y2; CIRC: x1, y1; POLY: x1, y1, x2, y2, x3, y3 . . .
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute><xsd:attribute name="BEGIN" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">BEGIN (string/O): An attribute that specifies the point in the content file where the relevant section of content begins. It can be used in conjunction with either the END attribute or the EXTENT attribute as a means of defining the relevant portion of the referenced file precisely. It can only be interpreted meaningfully in conjunction with the BETYPE or EXTTYPE, which specify the kind of beginning/ending point values or beginning/extent values that are being used. The BEGIN attribute can be used with or without a companion END or EXTENT element. In this case, the end of the content file is assumed to be the end point.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="BETYPE" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">BETYPE: Begin/End Type.
					BETYPE (string/O): An attribute that specifies the kind of BEGIN and/or END values that are being used. For example, if BYTE is specified, then the BEGIN and END point values represent the byte offsets into a file. If IDREF is specified, then the BEGIN element specifies the ID value that identifies the element in a structured text file where the relevant section of the file begins; and the END value (if present) would specify the ID value that identifies the element with which the relevant section of the file ends. Must be one of the following values:
BYTE
IDREF
SMIL
MIDI
SMPTE-25
SMPTE-24
SMPTE-DF30
SMPTE-NDF30
SMPTE-DF29.97
SMPTE-NDF29.97
TIME
TCF
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="IDREF"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="structLinkType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">structLinkType: Complex Type for Structural Map Linking
				The Structural Map Linking section allows for the specification of hyperlinks between different components of a METS structure delineated in a structural map.  structLink contains a single, repeatable element, smLink.  Each smLink element indicates a hyperlink between two nodes in the structMap.  The structMap nodes recorded in smLink are identified using their XML ID attribute	values.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="smLink">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The Structural Map Link element &lt;smLink&gt; identifies a hyperlink between two nodes in the structural map. You would use &lt;smLink&gt;, for instance, to note the existence of hypertext links between web pages, if you wished to record those links within METS. NOTE: &lt;smLink&gt; is an empty element. The location of the &lt;smLink&gt; element to which the &lt;smLink&gt; element is pointing MUST be stored in the xlink:href attribute.
				</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attribute name="ID" type="xsd:ID" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:arcrole" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								xlink:arcrole - the role of the link, as per the xlink specification.  See http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:title" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								xlink:title - a title for the link (if needed), as per the xlink specification.  See http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:show" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								xlink:show - see the xlink specification at http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:actuate" use="optional">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								xlink:actuate - see the xlink specification at http://www.w3.org/TR/xlink/
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:to" use="required">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								xlink:to - the value of the label for the element in the structMap you are linking to.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute ref="xlink:from" use="required">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								xlink:from - the value of the label for the element in the structMap you are linking from.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="smLinkGrp">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The structMap link group element &lt;smLinkGrp&gt; provides an implementation of xlink:extendLink, and provides xlink compliant mechanisms for establishing xlink:arcLink type links between 2 or more &lt;div&gt; elements in &lt;structMap&gt; element(s) occurring within the same METS document or different METS documents.  The smLinkGrp could be used as an alternative to the &lt;smLink&gt; element to establish a one-to-one link between &lt;div&gt; elements in the same METS document in a fully xlink compliant manner.  However, it can also be used to establish one-to-many or many-to-many links between &lt;div&gt; elements. For example, if a METS document contains two &lt;structMap&gt; elements, one of which represents a purely logical structure and one of which represents a purely physical structure, the &lt;smLinkGrp&gt; element would provide a means of mapping a &lt;div&gt; representing a logical entity (for example, a newspaper article) with multiple &lt;div&gt; elements in the physical &lt;structMap&gt; representing the physical areas that  together comprise the logical entity (for example, the &lt;div&gt; elements representing the page areas that together comprise the newspaper article).
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="smLocatorLink" minOccurs="2" maxOccurs="unbounded" >
							<xsd:annotation>
								<xsd:documentation xml:lang="en">
									The structMap locator link element &lt;smLocatorLink&gt; is of xlink:type &quot;locator&quot;.  It provides a means of identifying a &lt;div&gt; element that will participate in one or more of the links specified by means of &lt;smArcLink&gt; elements within the same &lt;smLinkGrp&gt;. The participating &lt;div&gt; element that is represented by the &lt;smLocatorLink&gt; is identified by means of a URI in the associate xlink:href attribute.  The lowest level of this xlink:href URI value should be a fragment identifier that references the ID value that identifies the relevant &lt;div&gt; element.  For example, &quot;xlink:href=&apos;#div20&apos;&quot; where &quot;div20&quot; is the ID value that identifies the pertinent &lt;div&gt; in the current METS document. Although not required by the xlink specification, an &lt;smLocatorLink&gt; element will typically include an xlink:label attribute in this context, as the &lt;smArcLink&gt; elements will reference these labels to establish the from and to sides of each arc link.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:attribute name="ID" type="xsd:ID">
									<xsd:annotation>
										<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
								<xsd:attributeGroup ref="xlink:locatorLink"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
					<xsd:attributeGroup ref="xlink:extendedLink"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
		<xsd:attribute name="ID" type="xsd:ID" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="mdSecType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">mdSecType: Complex Type for Metadata Sections
			A generic framework for pointing to/including metadata within a METS document, a la Warwick Framework.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="mdWrap" minOccurs="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						A metadata wrapper element &lt;mdWrap&gt; provides a wrapper around metadata embedded within a METS document. The element is repeatable. Such metadata can be in one of two forms: 1) XML-encoded metadata, with the XML-encoding identifying itself as belonging to a namespace other than the METS document namespace. 2) Any arbitrary binary or textual form, PROVIDED that the metadata is Base64 encoded and wrapped in a &lt;binData&gt; element within the internal descriptive metadata element.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="xmlData" minOccurs="1">
							<xsd:annotation>
								<xsd:documentation xml:lang="en">
									The xml data wrapper element &lt;xmlData&gt; is used to contain XML encoded metadata. The content of an &lt;xmlData&gt; element can be in any namespace or in no namespace. As permitted by the XML Schema Standard, the processContents attribute value for the metadata in an &lt;xmlData&gt; is set to “lax”. Therefore, if the source schema and its location are identified by means of an XML schemaLocation attribute, then an XML processor will validate the elements for which it can find declarations. If a source schema is not identified, or cannot be found at the specified schemaLocation, then an XML validator will check for well-formedness, but otherwise skip over the elements appearing in the &lt;xmlData&gt; element.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element ref="Q1:mods" minOccurs="1" maxOccurs="1"></xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:attributeGroup ref="METADATA"/>
					<xsd:attributeGroup ref="FILECORE"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">ID (ID/R): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. The ID attribute on the &lt;dmdSec&gt;, &lt;techMD&gt;, &lt;sourceMD&gt;, &lt;rightsMD&gt; and &lt;digiprovMD&gt; elements (which are all of mdSecType) is required, and its value should be referenced from one or more DMDID attributes (when the ID identifies a &lt;dmdSec&gt; element) or ADMID attributes (when the ID identifies a &lt;techMD&gt;, &lt;sourceMD&gt;, &lt;rightsMD&gt; or &lt;digiprovMD&gt; element) that are associated with other elements in the METS document. The following elements support references to a &lt;dmdSec&gt; via a DMDID attribute: &lt;file&gt;, &lt;stream&gt;, &lt;div&gt;.  The following elements support references to &lt;techMD&gt;, &lt;sourceMD&gt;, &lt;rightsMD&gt; and &lt;digiprovMD&gt; elements via an ADMID attribute: &lt;metsHdr&gt;, &lt;dmdSec&gt;, &lt;techMD&gt;, &lt;sourceMD&gt;, &lt;rightsMD&gt;, &lt;digiprovMD&gt;, &lt;fileGrp&gt;, &lt;file&gt;, &lt;stream&gt;, &lt;div&gt;, &lt;area&gt;, &lt;behavior&gt;. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="fileType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				fileType: Complex Type for Files The file element
				provides access to content files for a METS object. A
				file element may contain one or more FLocat elements,
				which provide pointers to a content file, and/or an
				FContent element, which wraps an encoded version of the
				file. Note that ALL FLocat and FContent elements
				underneath a single file element should identify/contain
				identical copies of a single file.
			</xsd:documentation>
		</xsd:annotation>

		<xsd:sequence>
			<xsd:element name="FLocat" minOccurs="1"
				maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
						The file location element &lt;FLocat&gt;
						provides a pointer to the location of a content
						file. It uses the XLink reference syntax to
						provide linking information indicating the
						actual location of the content file, along with
						other attributes specifying additional linking
						information. NOTE: &lt;FLocat&gt; is an empty
						element. The location of the resource pointed to
						MUST be stored in the xlink:href attribute.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:attributeGroup ref="LOCATION" />
					<xsd:attributeGroup ref="xlink:simpleLink" />
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">
					ID (ID/R): This attribute uniquely identifies the
					element within the METS document, and would allow
					the element to be referenced unambiguously from
					another element or document via an IDREF or an XPTR.
					Typically, the ID attribute value on a &lt;file&gt;
					element would be referenced from one or more FILEID
					attributes (which are of type IDREF) on
					&lt;fptr&gt;and/or &lt;area&gt; elements within the
					&lt;structMap&gt;. Such references establish links
					between structural divisions (&lt;div&gt; elements)
					and the specific content files or parts of content
					files that manifest them. For more information on
					using ID attributes for internal and external
					linking see Chapter 4 of the METS Primer.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="SEQ" type="xsd:int" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">
					SEQ (integer/O): Indicates the sequence of this
					&lt;file&gt; relative to the others in its
					&lt;fileGrp&gt;.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attributeGroup ref="FILECORE"></xsd:attributeGroup>

		<xsd:attribute name="MIMETYPE">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="application/pdf"></xsd:enumeration>
					<xsd:enumeration value="image/tiff"></xsd:enumeration>
					<xsd:enumeration value="image/jpeg"></xsd:enumeration>
					<xsd:enumeration value="image/png"></xsd:enumeration>
					<xsd:enumeration value="application/xml"></xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:simpleType name="URIs">
			<xsd:list itemType="xsd:anyURI"/>
		</xsd:simpleType>
	<xsd:attributeGroup name="METADATA">
		<xsd:attribute name="MDTYPE" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">MDTYPE (string/R): Is used to indicate the type of the associated metadata. It must have one of the following values:
MARC: any form of MARC record
MODS: metadata in the Library of Congress MODS format
EAD: Encoded Archival Description finding aid
DC: Dublin Core
NISOIMG: NISO Technical Metadata for Digital Still Images
LC-AV: technical metadata specified in the Library of Congress A/V prototyping project
VRA: Visual Resources Association Core
TEIHDR: Text Encoding Initiative Header
DDI: Data Documentation Initiative
FGDC: Federal Geographic Data Committee metadata
LOM: Learning Object Model
PREMIS:  PREservation Metadata: Implementation Strategies
PREMIS:OBJECT: PREMIS Object entiry
PREMIS:AGENT: PREMIS Agent entity
PREMIS:RIGHTS: PREMIS Rights entity
PREMIS:EVENT: PREMIS Event entity
TEXTMD: textMD Technical metadata for text
METSRIGHTS: Rights Declaration Schema
OTHER: metadata in a format not specified above
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="MODS" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="LOCATION">
		<xsd:attribute name="LOCTYPE" use="required">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">LOCTYPE (string/R): Specifies the locator type used in the xlink:href attribute. Valid values for LOCTYPE are:
					ARK
					URN
					URL
					PURL
					HANDLE
					DOI
					OTHER
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="ARK"/>
					<xsd:enumeration value="URN"/>
					<xsd:enumeration value="URL"/>
					<xsd:enumeration value="PURL"/>
					<xsd:enumeration value="HANDLE"/>
					<xsd:enumeration value="DOI"/>
					<xsd:enumeration value="OTHER"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="OTHERLOCTYPE" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation xml:lang="en">OTHERLOCTYPE (string/O): Specifies the locator type when the value OTHER is used in the LOCTYPE attribute. Although optional, it is strongly recommended when OTHER is used.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:attributeGroup>
	<xsd:attributeGroup name="FILECORE">
	</xsd:attributeGroup>
</xsd:schema>